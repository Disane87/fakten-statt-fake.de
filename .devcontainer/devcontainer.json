{
  "name": "Fakten statt Fake Development",
  "dockerComposeFile": "docker-compose.yml",
  "service": "app",
  "workspaceFolder": "/workspace",
  
  // Features to install
  "features": {
    "ghcr.io/devcontainers/features/node:1": {
      "nodeGypDependencies": true,
      "version": "20"
    },
    "ghcr.io/devcontainers/features/git:1": {},
    "ghcr.io/devcontainers/features/github-cli:1": {},
    "ghcr.io/devcontainers/features/docker-in-docker:2": {},
    "ghcr.io/devcontainers/features/common-utils:2": {
      "installZsh": true,
      "configureZshAsDefaultShell": true,
      "installOhMyZsh": true
    }
  },

  // Configure tool-specific properties
  "customizations": {
    "vscode": {
      "extensions": [
        "Vue.volar",
        "bradlc.vscode-tailwindcss",
        "esbenp.prettier-vscode",
        "ms-vscode.vscode-typescript-next",
        "ms-vscode.vscode-json",
        "supabase.supabase-vscode",
        "continue.continue",
        "ms-vscode-remote.remote-containers"
      ],
      "settings": {
        "typescript.preferences.useAliasesForRenames": false,
        "vue.inlayHints.missingProps": true,
        "vue.server.hybridMode": true,
        "editor.formatOnSave": true,
        "tailwindCSS.experimental.classRegex": [
          ["class:\\s*[\"']([^\"']*)[\"']", 1]
        ]
      }
    }
  },

  // Use 'forwardPorts' to make a list of ports inside the container available locally
  "forwardPorts": [
    3000,    // Nuxt dev server
    54321,   // Supabase Studio
    54322,   // Supabase Database
    54323,   // Supabase REST API
    54324,   // Supabase Auth
    54325,   // Supabase Storage
    54326,   // Supabase Edge Functions
    11434    // Ollama API
  ],

  "portsAttributes": {
    "3000": {
      "label": "Nuxt Dev Server",
      "onAutoForward": "notify"
    },
    "54321": {
      "label": "Supabase Studio",
      "onAutoForward": "openBrowser"
    },
    "11434": {
      "label": "Ollama API",
      "onAutoForward": "silent"
    }
  },

  // Use 'postCreateCommand' to run commands after the container is created
  "postCreateCommand": ".devcontainer/post-create.sh",

  // Use 'postStartCommand' to run commands after the container starts
  "postStartCommand": ".devcontainer/post-start.sh",

  // Comment out to connect as root instead. More info: https://aka.ms/vscode-remote/containers/non-root
  "remoteUser": "vscode",

  // Mount the workspace and preserve file permissions
  "mounts": [
    "source=${localWorkspaceFolder},target=/workspace,type=bind,consistency=cached"
  ]
}
